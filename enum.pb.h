// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enum.proto

#ifndef PROTOBUF_enum_2eproto__INCLUDED
#define PROTOBUF_enum_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace suyin {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_enum_2eproto();
void protobuf_AssignDesc_enum_2eproto();
void protobuf_ShutdownFile_enum_2eproto();


enum SEX_T {
  SEX_Man = 0,
  SEX_Woman = 1
};
bool SEX_T_IsValid(int value);
const SEX_T SEX_T_MIN = SEX_Man;
const SEX_T SEX_T_MAX = SEX_Woman;
const int SEX_T_ARRAYSIZE = SEX_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* SEX_T_descriptor();
inline const ::std::string& SEX_T_Name(SEX_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    SEX_T_descriptor(), value);
}
inline bool SEX_T_Parse(
    const ::std::string& name, SEX_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SEX_T>(
    SEX_T_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace suyin
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::suyin::proto::SEX_T> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::suyin::proto::SEX_T>() {
  return ::com::suyin::proto::SEX_T_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_enum_2eproto__INCLUDED
