// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_client.proto

#ifndef PROTOBUF_msg_5fclient_2eproto__INCLUDED
#define PROTOBUF_msg_5fclient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "enum.pb.h"
#include "struct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5fclient_2eproto();
void protobuf_AssignDesc_msg_5fclient_2eproto();
void protobuf_ShutdownFile_msg_5fclient_2eproto();

class UM_Login;
class UM_Logout;
class UM_EnterGame;
class UM_SyncRole;
class UM_BuyItem;
class UM_UseItem;
class UM_ItemUpdate;
class UM_UnequipItem;
class UM_EquipUpdate;
class UM_ReqShop;
class UM_Shop;
class UM_HeroLevelup;
class UM_Hero;
class UM_ReqServerList;
class UM_ServerList;
class UM_ReqLoginFight;
class UM_LoginFightKey;
class UM_ExitFight;
class UM_Gm;
class UM_Response;
class UM_SetFocus;
class UM_ReqRole;
class UM_RoleInfo;
class UM_ReqFans;
class UM_Fans;
class UM_ReqRanks;
class UM_Ranks;
class UM_FightLikes;
class UM_GetTopMsg;
class UM_GetMsg;
class UM_SendMsg;
class UM_LikeMsg;
class UM_TopMsg;
class UM_MsgList;
class UM_GetFriend;
class UM_Friends;
class UM_ResponseInvite;
class UM_AddFriend;
class UM_InviteFriend;
class UM_AddInvite;
class UM_DelInvite;
class UM_ToBlack;
class UM_AddBlack;
class UM_ReqSeasonRank;
class UM_SeasonRank;
class UM_ReqGameRecord;
class UM_GameRecord;
class UM_SetPhoto;
class UM_ReqPhotos;
class UM_Photos;
class UM_SetName;
class UM_SetSex;
class UM_SetDesc;
class UM_SetGeo;
class UM_SetIcon;
class UM_GetTicket;
class UM_ReqIcons;
class UM_Icons;
class UM_Sign;
class UM_Award;
class UM_AwardList;

enum IDUM_CLI {
  IDUM_GATEB = 0,
  IDUM_Gm = 1,
  IDUM_Login = 10,
  IDUM_BuyItem = 20,
  IDUM_UseItem = 21,
  IDUM_ReqShop = 22,
  IDUM_UnequipItem = 23,
  IDUM_HeroLevelup = 30,
  IDUM_ReqServerList = 50,
  IDUM_ReqLoginFight = 51,
  IDUM_ExitFight = 52,
  IDUM_SetFocus = 60,
  IDUM_ReqRole = 62,
  IDUM_ReqFans = 63,
  IDUM_ReqRanks = 70,
  IDUM_GetTopMsg = 80,
  IDUM_GetMsg = 81,
  IDUM_SendMsg = 82,
  IDUM_LikeMsg = 83,
  IDUM_GetFriend = 90,
  IDUM_InviteFriend = 91,
  IDUM_ResponseInvite = 92,
  IDUM_ToBlack = 95,
  IDUM_ReqSeasonRank = 100,
  IDUM_ReqGameRecord = 101,
  IDUM_SetPhoto = 102,
  IDUM_ReqPhotos = 103,
  IDUM_SetName = 110,
  IDUM_SetSex = 111,
  IDUM_SetDesc = 112,
  IDUM_SetGeo = 113,
  IDUM_SetIcon = 114,
  IDUM_GetTicket = 115,
  IDUM_Sign = 116,
  IDUM_Award = 117,
  IDUM_ReqIcons = 120,
  IDUM_GATEE = 999,
  IDUM_CLIB = 1000,
  IDUM_Response = 1001,
  IDUM_Logout = 1010,
  IDUM_EnterGame = 1011,
  IDUM_SyncRole = 1012,
  IDUM_ItemUpdate = 1020,
  IDUM_Shop = 1022,
  IDUM_EquipUpdate = 1023,
  IDUM_Hero = 1030,
  IDUM_ServerList = 1050,
  IDUM_LoginFightKey = 1051,
  IDUM_RoleInfo = 1062,
  IDUM_Fans = 1063,
  IDUM_Ranks = 1070,
  IDUM_FightLikes = 1071,
  IDUM_TopMsg = 1080,
  IDUM_MsgList = 1081,
  IDUM_Friends = 1090,
  IDUM_AddFriend = 1091,
  IDUM_AddInvite = 1092,
  IDUM_DelInvite = 1093,
  IDUM_AddBlack = 1095,
  IDUM_SeasonRank = 1100,
  IDUM_GameRecord = 1101,
  IDUM_Photos = 1103,
  IDUM_AwardList = 1117,
  IDUM_Icons = 1120,
  IDUM_CLIE = 1999
};
bool IDUM_CLI_IsValid(int value);
const IDUM_CLI IDUM_CLI_MIN = IDUM_GATEB;
const IDUM_CLI IDUM_CLI_MAX = IDUM_CLIE;
const int IDUM_CLI_ARRAYSIZE = IDUM_CLI_MAX + 1;

const ::google::protobuf::EnumDescriptor* IDUM_CLI_descriptor();
inline const ::std::string& IDUM_CLI_Name(IDUM_CLI value) {
  return ::google::protobuf::internal::NameOfEnum(
    IDUM_CLI_descriptor(), value);
}
inline bool IDUM_CLI_Parse(
    const ::std::string& name, IDUM_CLI* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IDUM_CLI>(
    IDUM_CLI_descriptor(), name, value);
}
// ===================================================================

class UM_Login : public ::google::protobuf::Message {
 public:
  UM_Login();
  virtual ~UM_Login();

  UM_Login(const UM_Login& from);

  inline UM_Login& operator=(const UM_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Login& default_instance();

  void Swap(UM_Login* other);

  // implements Message ----------------------------------------------

  UM_Login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Login& from);
  void MergeFrom(const UM_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string acc = 1;
  inline bool has_acc() const;
  inline void clear_acc();
  static const int kAccFieldNumber = 1;
  inline const ::std::string& acc() const;
  inline void set_acc(const ::std::string& value);
  inline void set_acc(const char* value);
  inline void set_acc(const char* value, size_t size);
  inline ::std::string* mutable_acc();
  inline ::std::string* release_acc();
  inline void set_allocated_acc(::std::string* acc);

  // optional string passwd = 2;
  inline bool has_passwd() const;
  inline void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  inline const ::std::string& passwd() const;
  inline void set_passwd(const ::std::string& value);
  inline void set_passwd(const char* value);
  inline void set_passwd(const char* value, size_t size);
  inline ::std::string* mutable_passwd();
  inline ::std::string* release_passwd();
  inline void set_allocated_passwd(::std::string* passwd);

  // @@protoc_insertion_point(class_scope:UM_Login)
 private:
  inline void set_has_acc();
  inline void clear_has_acc();
  inline void set_has_passwd();
  inline void clear_has_passwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* acc_;
  ::std::string* passwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Login* default_instance_;
};
// -------------------------------------------------------------------

class UM_Logout : public ::google::protobuf::Message {
 public:
  UM_Logout();
  virtual ~UM_Logout();

  UM_Logout(const UM_Logout& from);

  inline UM_Logout& operator=(const UM_Logout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Logout& default_instance();

  void Swap(UM_Logout* other);

  // implements Message ----------------------------------------------

  UM_Logout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Logout& from);
  void MergeFrom(const UM_Logout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UM_Logout)
 private:
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Logout* default_instance_;
};
// -------------------------------------------------------------------

class UM_EnterGame : public ::google::protobuf::Message {
 public:
  UM_EnterGame();
  virtual ~UM_EnterGame();

  UM_EnterGame(const UM_EnterGame& from);

  inline UM_EnterGame& operator=(const UM_EnterGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_EnterGame& default_instance();

  void Swap(UM_EnterGame* other);

  // implements Message ----------------------------------------------

  UM_EnterGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_EnterGame& from);
  void MergeFrom(const UM_EnterGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .role_info info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::role_info& info() const;
  inline ::role_info* mutable_info();
  inline ::role_info* release_info();
  inline void set_allocated_info(::role_info* info);

  // optional uint32 servertime = 2;
  inline bool has_servertime() const;
  inline void clear_servertime();
  static const int kServertimeFieldNumber = 2;
  inline ::google::protobuf::uint32 servertime() const;
  inline void set_servertime(::google::protobuf::uint32 value);

  // optional bool fighting = 3;
  inline bool has_fighting() const;
  inline void clear_fighting();
  static const int kFightingFieldNumber = 3;
  inline bool fighting() const;
  inline void set_fighting(bool value);

  // @@protoc_insertion_point(class_scope:UM_EnterGame)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_servertime();
  inline void clear_has_servertime();
  inline void set_has_fighting();
  inline void clear_has_fighting();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::role_info* info_;
  ::google::protobuf::uint32 servertime_;
  bool fighting_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_EnterGame* default_instance_;
};
// -------------------------------------------------------------------

class UM_SyncRole : public ::google::protobuf::Message {
 public:
  UM_SyncRole();
  virtual ~UM_SyncRole();

  UM_SyncRole(const UM_SyncRole& from);

  inline UM_SyncRole& operator=(const UM_SyncRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_SyncRole& default_instance();

  void Swap(UM_SyncRole* other);

  // implements Message ----------------------------------------------

  UM_SyncRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_SyncRole& from);
  void MergeFrom(const UM_SyncRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .role_info info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::role_info& info() const;
  inline ::role_info* mutable_info();
  inline ::role_info* release_info();
  inline void set_allocated_info(::role_info* info);

  // @@protoc_insertion_point(class_scope:UM_SyncRole)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::role_info* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_SyncRole* default_instance_;
};
// -------------------------------------------------------------------

class UM_BuyItem : public ::google::protobuf::Message {
 public:
  UM_BuyItem();
  virtual ~UM_BuyItem();

  UM_BuyItem(const UM_BuyItem& from);

  inline UM_BuyItem& operator=(const UM_BuyItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_BuyItem& default_instance();

  void Swap(UM_BuyItem* other);

  // implements Message ----------------------------------------------

  UM_BuyItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_BuyItem& from);
  void MergeFrom(const UM_BuyItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_BuyItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_BuyItem* default_instance_;
};
// -------------------------------------------------------------------

class UM_UseItem : public ::google::protobuf::Message {
 public:
  UM_UseItem();
  virtual ~UM_UseItem();

  UM_UseItem(const UM_UseItem& from);

  inline UM_UseItem& operator=(const UM_UseItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_UseItem& default_instance();

  void Swap(UM_UseItem* other);

  // implements Message ----------------------------------------------

  UM_UseItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_UseItem& from);
  void MergeFrom(const UM_UseItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_UseItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_UseItem* default_instance_;
};
// -------------------------------------------------------------------

class UM_ItemUpdate : public ::google::protobuf::Message {
 public:
  UM_ItemUpdate();
  virtual ~UM_ItemUpdate();

  UM_ItemUpdate(const UM_ItemUpdate& from);

  inline UM_ItemUpdate& operator=(const UM_ItemUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ItemUpdate& default_instance();

  void Swap(UM_ItemUpdate* other);

  // implements Message ----------------------------------------------

  UM_ItemUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ItemUpdate& from);
  void MergeFrom(const UM_ItemUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .item_info list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::item_info& list(int index) const;
  inline ::item_info* mutable_list(int index);
  inline ::item_info* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::item_info >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::item_info >*
      mutable_list();

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UM_ItemUpdate)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::item_info > list_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ItemUpdate* default_instance_;
};
// -------------------------------------------------------------------

class UM_UnequipItem : public ::google::protobuf::Message {
 public:
  UM_UnequipItem();
  virtual ~UM_UnequipItem();

  UM_UnequipItem(const UM_UnequipItem& from);

  inline UM_UnequipItem& operator=(const UM_UnequipItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_UnequipItem& default_instance();

  void Swap(UM_UnequipItem* other);

  // implements Message ----------------------------------------------

  UM_UnequipItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_UnequipItem& from);
  void MergeFrom(const UM_UnequipItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemtype = 1;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  inline ::google::protobuf::int32 itemtype() const;
  inline void set_itemtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UM_UnequipItem)
 private:
  inline void set_has_itemtype();
  inline void clear_has_itemtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_UnequipItem* default_instance_;
};
// -------------------------------------------------------------------

class UM_EquipUpdate : public ::google::protobuf::Message {
 public:
  UM_EquipUpdate();
  virtual ~UM_EquipUpdate();

  UM_EquipUpdate(const UM_EquipUpdate& from);

  inline UM_EquipUpdate& operator=(const UM_EquipUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_EquipUpdate& default_instance();

  void Swap(UM_EquipUpdate* other);

  // implements Message ----------------------------------------------

  UM_EquipUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_EquipUpdate& from);
  void MergeFrom(const UM_EquipUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemtype = 1;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  inline ::google::protobuf::int32 itemtype() const;
  inline void set_itemtype(::google::protobuf::int32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_EquipUpdate)
 private:
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemtype_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_EquipUpdate* default_instance_;
};
// -------------------------------------------------------------------

class UM_ReqShop : public ::google::protobuf::Message {
 public:
  UM_ReqShop();
  virtual ~UM_ReqShop();

  UM_ReqShop(const UM_ReqShop& from);

  inline UM_ReqShop& operator=(const UM_ReqShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ReqShop& default_instance();

  void Swap(UM_ReqShop* other);

  // implements Message ----------------------------------------------

  UM_ReqShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ReqShop& from);
  void MergeFrom(const UM_ReqShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UM_ReqShop)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ReqShop* default_instance_;
};
// -------------------------------------------------------------------

class UM_Shop : public ::google::protobuf::Message {
 public:
  UM_Shop();
  virtual ~UM_Shop();

  UM_Shop(const UM_Shop& from);

  inline UM_Shop& operator=(const UM_Shop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Shop& default_instance();

  void Swap(UM_Shop* other);

  // implements Message ----------------------------------------------

  UM_Shop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Shop& from);
  void MergeFrom(const UM_Shop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shop_item list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::shop_item& list(int index) const;
  inline ::shop_item* mutable_list(int index);
  inline ::shop_item* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::shop_item >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::shop_item >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:UM_Shop)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::shop_item > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Shop* default_instance_;
};
// -------------------------------------------------------------------

class UM_HeroLevelup : public ::google::protobuf::Message {
 public:
  UM_HeroLevelup();
  virtual ~UM_HeroLevelup();

  UM_HeroLevelup(const UM_HeroLevelup& from);

  inline UM_HeroLevelup& operator=(const UM_HeroLevelup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_HeroLevelup& default_instance();

  void Swap(UM_HeroLevelup* other);

  // implements Message ----------------------------------------------

  UM_HeroLevelup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_HeroLevelup& from);
  void MergeFrom(const UM_HeroLevelup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UM_HeroLevelup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_HeroLevelup* default_instance_;
};
// -------------------------------------------------------------------

class UM_Hero : public ::google::protobuf::Message {
 public:
  UM_Hero();
  virtual ~UM_Hero();

  UM_Hero(const UM_Hero& from);

  inline UM_Hero& operator=(const UM_Hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Hero& default_instance();

  void Swap(UM_Hero* other);

  // implements Message ----------------------------------------------

  UM_Hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Hero& from);
  void MergeFrom(const UM_Hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // optional uint32 herolevel = 2;
  inline bool has_herolevel() const;
  inline void clear_herolevel();
  static const int kHerolevelFieldNumber = 2;
  inline ::google::protobuf::uint32 herolevel() const;
  inline void set_herolevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_Hero)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_herolevel();
  inline void clear_has_herolevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 herolevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Hero* default_instance_;
};
// -------------------------------------------------------------------

class UM_ReqServerList : public ::google::protobuf::Message {
 public:
  UM_ReqServerList();
  virtual ~UM_ReqServerList();

  UM_ReqServerList(const UM_ReqServerList& from);

  inline UM_ReqServerList& operator=(const UM_ReqServerList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ReqServerList& default_instance();

  void Swap(UM_ReqServerList* other);

  // implements Message ----------------------------------------------

  UM_ReqServerList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ReqServerList& from);
  void MergeFrom(const UM_ReqServerList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UM_ReqServerList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ReqServerList* default_instance_;
};
// -------------------------------------------------------------------

class UM_ServerList : public ::google::protobuf::Message {
 public:
  UM_ServerList();
  virtual ~UM_ServerList();

  UM_ServerList(const UM_ServerList& from);

  inline UM_ServerList& operator=(const UM_ServerList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ServerList& default_instance();

  void Swap(UM_ServerList* other);

  // implements Message ----------------------------------------------

  UM_ServerList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ServerList& from);
  void MergeFrom(const UM_ServerList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .server_info list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::server_info& list(int index) const;
  inline ::server_info* mutable_list(int index);
  inline ::server_info* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::server_info >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::server_info >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:UM_ServerList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::server_info > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ServerList* default_instance_;
};
// -------------------------------------------------------------------

class UM_ReqLoginFight : public ::google::protobuf::Message {
 public:
  UM_ReqLoginFight();
  virtual ~UM_ReqLoginFight();

  UM_ReqLoginFight(const UM_ReqLoginFight& from);

  inline UM_ReqLoginFight& operator=(const UM_ReqLoginFight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ReqLoginFight& default_instance();

  void Swap(UM_ReqLoginFight* other);

  // implements Message ----------------------------------------------

  UM_ReqLoginFight* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ReqLoginFight& from);
  void MergeFrom(const UM_ReqLoginFight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 serverid = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 1;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // optional int32 mode = 2;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 2;
  inline ::google::protobuf::int32 mode() const;
  inline void set_mode(::google::protobuf::int32 value);

  // optional uint32 ticket_count = 3;
  inline bool has_ticket_count() const;
  inline void clear_ticket_count();
  static const int kTicketCountFieldNumber = 3;
  inline ::google::protobuf::uint32 ticket_count() const;
  inline void set_ticket_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_ReqLoginFight)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_mode();
  inline void clear_has_mode();
  inline void set_has_ticket_count();
  inline void clear_has_ticket_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::uint32 ticket_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ReqLoginFight* default_instance_;
};
// -------------------------------------------------------------------

class UM_LoginFightKey : public ::google::protobuf::Message {
 public:
  UM_LoginFightKey();
  virtual ~UM_LoginFightKey();

  UM_LoginFightKey(const UM_LoginFightKey& from);

  inline UM_LoginFightKey& operator=(const UM_LoginFightKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_LoginFightKey& default_instance();

  void Swap(UM_LoginFightKey* other);

  // implements Message ----------------------------------------------

  UM_LoginFightKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_LoginFightKey& from);
  void MergeFrom(const UM_LoginFightKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 serverid = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 1;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // optional uint32 key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_LoginFightKey)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_LoginFightKey* default_instance_;
};
// -------------------------------------------------------------------

class UM_ExitFight : public ::google::protobuf::Message {
 public:
  UM_ExitFight();
  virtual ~UM_ExitFight();

  UM_ExitFight(const UM_ExitFight& from);

  inline UM_ExitFight& operator=(const UM_ExitFight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ExitFight& default_instance();

  void Swap(UM_ExitFight* other);

  // implements Message ----------------------------------------------

  UM_ExitFight* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ExitFight& from);
  void MergeFrom(const UM_ExitFight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UM_ExitFight)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ExitFight* default_instance_;
};
// -------------------------------------------------------------------

class UM_Gm : public ::google::protobuf::Message {
 public:
  UM_Gm();
  virtual ~UM_Gm();

  UM_Gm(const UM_Gm& from);

  inline UM_Gm& operator=(const UM_Gm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Gm& default_instance();

  void Swap(UM_Gm* other);

  // implements Message ----------------------------------------------

  UM_Gm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Gm& from);
  void MergeFrom(const UM_Gm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string command = 1;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 1;
  inline const ::std::string& command() const;
  inline void set_command(const ::std::string& value);
  inline void set_command(const char* value);
  inline void set_command(const char* value, size_t size);
  inline ::std::string* mutable_command();
  inline ::std::string* release_command();
  inline void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:UM_Gm)
 private:
  inline void set_has_command();
  inline void clear_has_command();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* command_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Gm* default_instance_;
};
// -------------------------------------------------------------------

class UM_Response : public ::google::protobuf::Message {
 public:
  UM_Response();
  virtual ~UM_Response();

  UM_Response(const UM_Response& from);

  inline UM_Response& operator=(const UM_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Response& default_instance();

  void Swap(UM_Response* other);

  // implements Message ----------------------------------------------

  UM_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Response& from);
  void MergeFrom(const UM_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 msgid = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // optional int32 err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UM_Response)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Response* default_instance_;
};
// -------------------------------------------------------------------

class UM_SetFocus : public ::google::protobuf::Message {
 public:
  UM_SetFocus();
  virtual ~UM_SetFocus();

  UM_SetFocus(const UM_SetFocus& from);

  inline UM_SetFocus& operator=(const UM_SetFocus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_SetFocus& default_instance();

  void Swap(UM_SetFocus* other);

  // implements Message ----------------------------------------------

  UM_SetFocus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_SetFocus& from);
  void MergeFrom(const UM_SetFocus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 set = 2;
  inline bool has_set() const;
  inline void clear_set();
  static const int kSetFieldNumber = 2;
  inline ::google::protobuf::uint32 set() const;
  inline void set_set(::google::protobuf::uint32 value);

  // optional uint32 roleid = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_SetFocus)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_set();
  inline void clear_has_set();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 set_;
  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_SetFocus* default_instance_;
};
// -------------------------------------------------------------------

class UM_ReqRole : public ::google::protobuf::Message {
 public:
  UM_ReqRole();
  virtual ~UM_ReqRole();

  UM_ReqRole(const UM_ReqRole& from);

  inline UM_ReqRole& operator=(const UM_ReqRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ReqRole& default_instance();

  void Swap(UM_ReqRole* other);

  // implements Message ----------------------------------------------

  UM_ReqRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ReqRole& from);
  void MergeFrom(const UM_ReqRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_ReqRole)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ReqRole* default_instance_;
};
// -------------------------------------------------------------------

class UM_RoleInfo : public ::google::protobuf::Message {
 public:
  UM_RoleInfo();
  virtual ~UM_RoleInfo();

  UM_RoleInfo(const UM_RoleInfo& from);

  inline UM_RoleInfo& operator=(const UM_RoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_RoleInfo& default_instance();

  void Swap(UM_RoleInfo* other);

  // implements Message ----------------------------------------------

  UM_RoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_RoleInfo& from);
  void MergeFrom(const UM_RoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .role_info info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::role_info& info() const;
  inline ::role_info* mutable_info();
  inline ::role_info* release_info();
  inline void set_allocated_info(::role_info* info);

  // @@protoc_insertion_point(class_scope:UM_RoleInfo)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::role_info* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_RoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class UM_ReqFans : public ::google::protobuf::Message {
 public:
  UM_ReqFans();
  virtual ~UM_ReqFans();

  UM_ReqFans(const UM_ReqFans& from);

  inline UM_ReqFans& operator=(const UM_ReqFans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ReqFans& default_instance();

  void Swap(UM_ReqFans* other);

  // implements Message ----------------------------------------------

  UM_ReqFans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ReqFans& from);
  void MergeFrom(const UM_ReqFans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional uint32 range1 = 2;
  inline bool has_range1() const;
  inline void clear_range1();
  static const int kRange1FieldNumber = 2;
  inline ::google::protobuf::uint32 range1() const;
  inline void set_range1(::google::protobuf::uint32 value);

  // optional uint32 range2 = 3;
  inline bool has_range2() const;
  inline void clear_range2();
  static const int kRange2FieldNumber = 3;
  inline ::google::protobuf::uint32 range2() const;
  inline void set_range2(::google::protobuf::uint32 value);

  // optional uint32 roleid = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_ReqFans)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_range1();
  inline void clear_has_range1();
  inline void set_has_range2();
  inline void clear_has_range2();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::uint32 range1_;
  ::google::protobuf::uint32 range2_;
  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ReqFans* default_instance_;
};
// -------------------------------------------------------------------

class UM_Fans : public ::google::protobuf::Message {
 public:
  UM_Fans();
  virtual ~UM_Fans();

  UM_Fans(const UM_Fans& from);

  inline UM_Fans& operator=(const UM_Fans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Fans& default_instance();

  void Swap(UM_Fans* other);

  // implements Message ----------------------------------------------

  UM_Fans* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Fans& from);
  void MergeFrom(const UM_Fans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fans_info list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::fans_info& list(int index) const;
  inline ::fans_info* mutable_list(int index);
  inline ::fans_info* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::fans_info >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::fans_info >*
      mutable_list();

  // optional uint32 range1 = 2;
  inline bool has_range1() const;
  inline void clear_range1();
  static const int kRange1FieldNumber = 2;
  inline ::google::protobuf::uint32 range1() const;
  inline void set_range1(::google::protobuf::uint32 value);

  // optional uint32 range2 = 3;
  inline bool has_range2() const;
  inline void clear_range2();
  static const int kRange2FieldNumber = 3;
  inline ::google::protobuf::uint32 range2() const;
  inline void set_range2(::google::protobuf::uint32 value);

  // optional uint32 roleid = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_Fans)
 private:
  inline void set_has_range1();
  inline void clear_has_range1();
  inline void set_has_range2();
  inline void clear_has_range2();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::fans_info > list_;
  ::google::protobuf::uint32 range1_;
  ::google::protobuf::uint32 range2_;
  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Fans* default_instance_;
};
// -------------------------------------------------------------------

class UM_ReqRanks : public ::google::protobuf::Message {
 public:
  UM_ReqRanks();
  virtual ~UM_ReqRanks();

  UM_ReqRanks(const UM_ReqRanks& from);

  inline UM_ReqRanks& operator=(const UM_ReqRanks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ReqRanks& default_instance();

  void Swap(UM_ReqRanks* other);

  // implements Message ----------------------------------------------

  UM_ReqRanks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ReqRanks& from);
  void MergeFrom(const UM_ReqRanks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 subtype = 2;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubtypeFieldNumber = 2;
  inline ::google::protobuf::int32 subtype() const;
  inline void set_subtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UM_ReqRanks)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_subtype();
  inline void clear_has_subtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 subtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ReqRanks* default_instance_;
};
// -------------------------------------------------------------------

class UM_Ranks : public ::google::protobuf::Message {
 public:
  UM_Ranks();
  virtual ~UM_Ranks();

  UM_Ranks(const UM_Ranks& from);

  inline UM_Ranks& operator=(const UM_Ranks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Ranks& default_instance();

  void Swap(UM_Ranks* other);

  // implements Message ----------------------------------------------

  UM_Ranks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Ranks& from);
  void MergeFrom(const UM_Ranks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .rank_info list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::rank_info& list(int index) const;
  inline ::rank_info* mutable_list(int index);
  inline ::rank_info* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::rank_info >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::rank_info >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:UM_Ranks)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::rank_info > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Ranks* default_instance_;
};
// -------------------------------------------------------------------

class UM_FightLikes : public ::google::protobuf::Message {
 public:
  UM_FightLikes();
  virtual ~UM_FightLikes();

  UM_FightLikes(const UM_FightLikes& from);

  inline UM_FightLikes& operator=(const UM_FightLikes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_FightLikes& default_instance();

  void Swap(UM_FightLikes* other);

  // implements Message ----------------------------------------------

  UM_FightLikes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_FightLikes& from);
  void MergeFrom(const UM_FightLikes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool attentions = 1;
  inline int attentions_size() const;
  inline void clear_attentions();
  static const int kAttentionsFieldNumber = 1;
  inline bool attentions(int index) const;
  inline void set_attentions(int index, bool value);
  inline void add_attentions(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      attentions() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_attentions();

  // repeated bool likes = 2;
  inline int likes_size() const;
  inline void clear_likes();
  static const int kLikesFieldNumber = 2;
  inline bool likes(int index) const;
  inline void set_likes(int index, bool value);
  inline void add_likes(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      likes() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_likes();

  // repeated uint32 roles = 3;
  inline int roles_size() const;
  inline void clear_roles();
  static const int kRolesFieldNumber = 3;
  inline ::google::protobuf::uint32 roles(int index) const;
  inline void set_roles(int index, ::google::protobuf::uint32 value);
  inline void add_roles(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      roles() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_roles();

  // @@protoc_insertion_point(class_scope:UM_FightLikes)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > attentions_;
  ::google::protobuf::RepeatedField< bool > likes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > roles_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_FightLikes* default_instance_;
};
// -------------------------------------------------------------------

class UM_GetTopMsg : public ::google::protobuf::Message {
 public:
  UM_GetTopMsg();
  virtual ~UM_GetTopMsg();

  UM_GetTopMsg(const UM_GetTopMsg& from);

  inline UM_GetTopMsg& operator=(const UM_GetTopMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_GetTopMsg& default_instance();

  void Swap(UM_GetTopMsg* other);

  // implements Message ----------------------------------------------

  UM_GetTopMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_GetTopMsg& from);
  void MergeFrom(const UM_GetTopMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_GetTopMsg)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_GetTopMsg* default_instance_;
};
// -------------------------------------------------------------------

class UM_GetMsg : public ::google::protobuf::Message {
 public:
  UM_GetMsg();
  virtual ~UM_GetMsg();

  UM_GetMsg(const UM_GetMsg& from);

  inline UM_GetMsg& operator=(const UM_GetMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_GetMsg& default_instance();

  void Swap(UM_GetMsg* other);

  // implements Message ----------------------------------------------

  UM_GetMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_GetMsg& from);
  void MergeFrom(const UM_GetMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // optional uint32 range1 = 2;
  inline bool has_range1() const;
  inline void clear_range1();
  static const int kRange1FieldNumber = 2;
  inline ::google::protobuf::uint32 range1() const;
  inline void set_range1(::google::protobuf::uint32 value);

  // optional uint32 range2 = 3;
  inline bool has_range2() const;
  inline void clear_range2();
  static const int kRange2FieldNumber = 3;
  inline ::google::protobuf::uint32 range2() const;
  inline void set_range2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_GetMsg)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_range1();
  inline void clear_has_range1();
  inline void set_has_range2();
  inline void clear_has_range2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 range1_;
  ::google::protobuf::uint32 range2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_GetMsg* default_instance_;
};
// -------------------------------------------------------------------

class UM_SendMsg : public ::google::protobuf::Message {
 public:
  UM_SendMsg();
  virtual ~UM_SendMsg();

  UM_SendMsg(const UM_SendMsg& from);

  inline UM_SendMsg& operator=(const UM_SendMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_SendMsg& default_instance();

  void Swap(UM_SendMsg* other);

  // implements Message ----------------------------------------------

  UM_SendMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_SendMsg& from);
  void MergeFrom(const UM_SendMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:UM_SendMsg)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* content_;
  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_SendMsg* default_instance_;
};
// -------------------------------------------------------------------

class UM_LikeMsg : public ::google::protobuf::Message {
 public:
  UM_LikeMsg();
  virtual ~UM_LikeMsg();

  UM_LikeMsg(const UM_LikeMsg& from);

  inline UM_LikeMsg& operator=(const UM_LikeMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_LikeMsg& default_instance();

  void Swap(UM_LikeMsg* other);

  // implements Message ----------------------------------------------

  UM_LikeMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_LikeMsg& from);
  void MergeFrom(const UM_LikeMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // optional uint32 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // optional int32 set = 3;
  inline bool has_set() const;
  inline void clear_set();
  static const int kSetFieldNumber = 3;
  inline ::google::protobuf::int32 set() const;
  inline void set_set(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UM_LikeMsg)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_set();
  inline void clear_has_set();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::int32 set_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_LikeMsg* default_instance_;
};
// -------------------------------------------------------------------

class UM_TopMsg : public ::google::protobuf::Message {
 public:
  UM_TopMsg();
  virtual ~UM_TopMsg();

  UM_TopMsg(const UM_TopMsg& from);

  inline UM_TopMsg& operator=(const UM_TopMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_TopMsg& default_instance();

  void Swap(UM_TopMsg* other);

  // implements Message ----------------------------------------------

  UM_TopMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_TopMsg& from);
  void MergeFrom(const UM_TopMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // repeated .msg_info list = 2;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 2;
  inline const ::msg_info& list(int index) const;
  inline ::msg_info* mutable_list(int index);
  inline ::msg_info* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::msg_info >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg_info >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:UM_TopMsg)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::msg_info > list_;
  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_TopMsg* default_instance_;
};
// -------------------------------------------------------------------

class UM_MsgList : public ::google::protobuf::Message {
 public:
  UM_MsgList();
  virtual ~UM_MsgList();

  UM_MsgList(const UM_MsgList& from);

  inline UM_MsgList& operator=(const UM_MsgList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_MsgList& default_instance();

  void Swap(UM_MsgList* other);

  // implements Message ----------------------------------------------

  UM_MsgList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_MsgList& from);
  void MergeFrom(const UM_MsgList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // optional uint32 range1 = 2;
  inline bool has_range1() const;
  inline void clear_range1();
  static const int kRange1FieldNumber = 2;
  inline ::google::protobuf::uint32 range1() const;
  inline void set_range1(::google::protobuf::uint32 value);

  // optional uint32 range2 = 3;
  inline bool has_range2() const;
  inline void clear_range2();
  static const int kRange2FieldNumber = 3;
  inline ::google::protobuf::uint32 range2() const;
  inline void set_range2(::google::protobuf::uint32 value);

  // repeated .msg_info list = 4;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 4;
  inline const ::msg_info& list(int index) const;
  inline ::msg_info* mutable_list(int index);
  inline ::msg_info* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::msg_info >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg_info >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:UM_MsgList)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_range1();
  inline void clear_has_range1();
  inline void set_has_range2();
  inline void clear_has_range2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 range1_;
  ::google::protobuf::RepeatedPtrField< ::msg_info > list_;
  ::google::protobuf::uint32 range2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_MsgList* default_instance_;
};
// -------------------------------------------------------------------

class UM_GetFriend : public ::google::protobuf::Message {
 public:
  UM_GetFriend();
  virtual ~UM_GetFriend();

  UM_GetFriend(const UM_GetFriend& from);

  inline UM_GetFriend& operator=(const UM_GetFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_GetFriend& default_instance();

  void Swap(UM_GetFriend* other);

  // implements Message ----------------------------------------------

  UM_GetFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_GetFriend& from);
  void MergeFrom(const UM_GetFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UM_GetFriend)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_GetFriend* default_instance_;
};
// -------------------------------------------------------------------

class UM_Friends : public ::google::protobuf::Message {
 public:
  UM_Friends();
  virtual ~UM_Friends();

  UM_Friends(const UM_Friends& from);

  inline UM_Friends& operator=(const UM_Friends& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Friends& default_instance();

  void Swap(UM_Friends* other);

  // implements Message ----------------------------------------------

  UM_Friends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Friends& from);
  void MergeFrom(const UM_Friends& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .friend_info list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::friend_info& list(int index) const;
  inline ::friend_info* mutable_list(int index);
  inline ::friend_info* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::friend_info >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::friend_info >*
      mutable_list();

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UM_Friends)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::friend_info > list_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Friends* default_instance_;
};
// -------------------------------------------------------------------

class UM_ResponseInvite : public ::google::protobuf::Message {
 public:
  UM_ResponseInvite();
  virtual ~UM_ResponseInvite();

  UM_ResponseInvite(const UM_ResponseInvite& from);

  inline UM_ResponseInvite& operator=(const UM_ResponseInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ResponseInvite& default_instance();

  void Swap(UM_ResponseInvite* other);

  // implements Message ----------------------------------------------

  UM_ResponseInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ResponseInvite& from);
  void MergeFrom(const UM_ResponseInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ok = 1;
  inline bool has_ok() const;
  inline void clear_ok();
  static const int kOkFieldNumber = 1;
  inline ::google::protobuf::int32 ok() const;
  inline void set_ok(::google::protobuf::int32 value);

  // optional uint32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_ResponseInvite)
 private:
  inline void set_has_ok();
  inline void clear_has_ok();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ok_;
  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ResponseInvite* default_instance_;
};
// -------------------------------------------------------------------

class UM_AddFriend : public ::google::protobuf::Message {
 public:
  UM_AddFriend();
  virtual ~UM_AddFriend();

  UM_AddFriend(const UM_AddFriend& from);

  inline UM_AddFriend& operator=(const UM_AddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_AddFriend& default_instance();

  void Swap(UM_AddFriend* other);

  // implements Message ----------------------------------------------

  UM_AddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_AddFriend& from);
  void MergeFrom(const UM_AddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional .friend_info info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::friend_info& info() const;
  inline ::friend_info* mutable_info();
  inline ::friend_info* release_info();
  inline void set_allocated_info(::friend_info* info);

  // @@protoc_insertion_point(class_scope:UM_AddFriend)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::friend_info* info_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_AddFriend* default_instance_;
};
// -------------------------------------------------------------------

class UM_InviteFriend : public ::google::protobuf::Message {
 public:
  UM_InviteFriend();
  virtual ~UM_InviteFriend();

  UM_InviteFriend(const UM_InviteFriend& from);

  inline UM_InviteFriend& operator=(const UM_InviteFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_InviteFriend& default_instance();

  void Swap(UM_InviteFriend* other);

  // implements Message ----------------------------------------------

  UM_InviteFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_InviteFriend& from);
  void MergeFrom(const UM_InviteFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:UM_InviteFriend)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_InviteFriend* default_instance_;
};
// -------------------------------------------------------------------

class UM_AddInvite : public ::google::protobuf::Message {
 public:
  UM_AddInvite();
  virtual ~UM_AddInvite();

  UM_AddInvite(const UM_AddInvite& from);

  inline UM_AddInvite& operator=(const UM_AddInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_AddInvite& default_instance();

  void Swap(UM_AddInvite* other);

  // implements Message ----------------------------------------------

  UM_AddInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_AddInvite& from);
  void MergeFrom(const UM_AddInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional .friend_info info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::friend_info& info() const;
  inline ::friend_info* mutable_info();
  inline ::friend_info* release_info();
  inline void set_allocated_info(::friend_info* info);

  // @@protoc_insertion_point(class_scope:UM_AddInvite)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::friend_info* info_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_AddInvite* default_instance_;
};
// -------------------------------------------------------------------

class UM_DelInvite : public ::google::protobuf::Message {
 public:
  UM_DelInvite();
  virtual ~UM_DelInvite();

  UM_DelInvite(const UM_DelInvite& from);

  inline UM_DelInvite& operator=(const UM_DelInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_DelInvite& default_instance();

  void Swap(UM_DelInvite* other);

  // implements Message ----------------------------------------------

  UM_DelInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_DelInvite& from);
  void MergeFrom(const UM_DelInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional .friend_info info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::friend_info& info() const;
  inline ::friend_info* mutable_info();
  inline ::friend_info* release_info();
  inline void set_allocated_info(::friend_info* info);

  // @@protoc_insertion_point(class_scope:UM_DelInvite)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::friend_info* info_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_DelInvite* default_instance_;
};
// -------------------------------------------------------------------

class UM_ToBlack : public ::google::protobuf::Message {
 public:
  UM_ToBlack();
  virtual ~UM_ToBlack();

  UM_ToBlack(const UM_ToBlack& from);

  inline UM_ToBlack& operator=(const UM_ToBlack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ToBlack& default_instance();

  void Swap(UM_ToBlack* other);

  // implements Message ----------------------------------------------

  UM_ToBlack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ToBlack& from);
  void MergeFrom(const UM_ToBlack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_ToBlack)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ToBlack* default_instance_;
};
// -------------------------------------------------------------------

class UM_AddBlack : public ::google::protobuf::Message {
 public:
  UM_AddBlack();
  virtual ~UM_AddBlack();

  UM_AddBlack(const UM_AddBlack& from);

  inline UM_AddBlack& operator=(const UM_AddBlack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_AddBlack& default_instance();

  void Swap(UM_AddBlack* other);

  // implements Message ----------------------------------------------

  UM_AddBlack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_AddBlack& from);
  void MergeFrom(const UM_AddBlack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .friend_info info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::friend_info& info() const;
  inline ::friend_info* mutable_info();
  inline ::friend_info* release_info();
  inline void set_allocated_info(::friend_info* info);

  // @@protoc_insertion_point(class_scope:UM_AddBlack)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::friend_info* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_AddBlack* default_instance_;
};
// -------------------------------------------------------------------

class UM_ReqSeasonRank : public ::google::protobuf::Message {
 public:
  UM_ReqSeasonRank();
  virtual ~UM_ReqSeasonRank();

  UM_ReqSeasonRank(const UM_ReqSeasonRank& from);

  inline UM_ReqSeasonRank& operator=(const UM_ReqSeasonRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ReqSeasonRank& default_instance();

  void Swap(UM_ReqSeasonRank* other);

  // implements Message ----------------------------------------------

  UM_ReqSeasonRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ReqSeasonRank& from);
  void MergeFrom(const UM_ReqSeasonRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_ReqSeasonRank)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ReqSeasonRank* default_instance_;
};
// -------------------------------------------------------------------

class UM_SeasonRank : public ::google::protobuf::Message {
 public:
  UM_SeasonRank();
  virtual ~UM_SeasonRank();

  UM_SeasonRank(const UM_SeasonRank& from);

  inline UM_SeasonRank& operator=(const UM_SeasonRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_SeasonRank& default_instance();

  void Swap(UM_SeasonRank* other);

  // implements Message ----------------------------------------------

  UM_SeasonRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_SeasonRank& from);
  void MergeFrom(const UM_SeasonRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .season_rank list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::season_rank& list(int index) const;
  inline ::season_rank* mutable_list(int index);
  inline ::season_rank* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::season_rank >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::season_rank >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:UM_SeasonRank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::season_rank > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_SeasonRank* default_instance_;
};
// -------------------------------------------------------------------

class UM_ReqGameRecord : public ::google::protobuf::Message {
 public:
  UM_ReqGameRecord();
  virtual ~UM_ReqGameRecord();

  UM_ReqGameRecord(const UM_ReqGameRecord& from);

  inline UM_ReqGameRecord& operator=(const UM_ReqGameRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ReqGameRecord& default_instance();

  void Swap(UM_ReqGameRecord* other);

  // implements Message ----------------------------------------------

  UM_ReqGameRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ReqGameRecord& from);
  void MergeFrom(const UM_ReqGameRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_ReqGameRecord)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ReqGameRecord* default_instance_;
};
// -------------------------------------------------------------------

class UM_GameRecord : public ::google::protobuf::Message {
 public:
  UM_GameRecord();
  virtual ~UM_GameRecord();

  UM_GameRecord(const UM_GameRecord& from);

  inline UM_GameRecord& operator=(const UM_GameRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_GameRecord& default_instance();

  void Swap(UM_GameRecord* other);

  // implements Message ----------------------------------------------

  UM_GameRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_GameRecord& from);
  void MergeFrom(const UM_GameRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .game_record list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::game_record& list(int index) const;
  inline ::game_record* mutable_list(int index);
  inline ::game_record* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_record >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_record >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:UM_GameRecord)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_record > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_GameRecord* default_instance_;
};
// -------------------------------------------------------------------

class UM_SetPhoto : public ::google::protobuf::Message {
 public:
  UM_SetPhoto();
  virtual ~UM_SetPhoto();

  UM_SetPhoto(const UM_SetPhoto& from);

  inline UM_SetPhoto& operator=(const UM_SetPhoto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_SetPhoto& default_instance();

  void Swap(UM_SetPhoto* other);

  // implements Message ----------------------------------------------

  UM_SetPhoto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_SetPhoto& from);
  void MergeFrom(const UM_SetPhoto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .photo_data data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::photo_data& data() const;
  inline ::photo_data* mutable_data();
  inline ::photo_data* release_data();
  inline void set_allocated_data(::photo_data* data);

  // @@protoc_insertion_point(class_scope:UM_SetPhoto)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::photo_data* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_SetPhoto* default_instance_;
};
// -------------------------------------------------------------------

class UM_ReqPhotos : public ::google::protobuf::Message {
 public:
  UM_ReqPhotos();
  virtual ~UM_ReqPhotos();

  UM_ReqPhotos(const UM_ReqPhotos& from);

  inline UM_ReqPhotos& operator=(const UM_ReqPhotos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ReqPhotos& default_instance();

  void Swap(UM_ReqPhotos* other);

  // implements Message ----------------------------------------------

  UM_ReqPhotos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ReqPhotos& from);
  void MergeFrom(const UM_ReqPhotos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_ReqPhotos)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ReqPhotos* default_instance_;
};
// -------------------------------------------------------------------

class UM_Photos : public ::google::protobuf::Message {
 public:
  UM_Photos();
  virtual ~UM_Photos();

  UM_Photos(const UM_Photos& from);

  inline UM_Photos& operator=(const UM_Photos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Photos& default_instance();

  void Swap(UM_Photos* other);

  // implements Message ----------------------------------------------

  UM_Photos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Photos& from);
  void MergeFrom(const UM_Photos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .photo_data list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::photo_data& list(int index) const;
  inline ::photo_data* mutable_list(int index);
  inline ::photo_data* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::photo_data >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::photo_data >*
      mutable_list();

  // optional uint32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_Photos)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::photo_data > list_;
  ::google::protobuf::uint32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Photos* default_instance_;
};
// -------------------------------------------------------------------

class UM_SetName : public ::google::protobuf::Message {
 public:
  UM_SetName();
  virtual ~UM_SetName();

  UM_SetName(const UM_SetName& from);

  inline UM_SetName& operator=(const UM_SetName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_SetName& default_instance();

  void Swap(UM_SetName* other);

  // implements Message ----------------------------------------------

  UM_SetName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_SetName& from);
  void MergeFrom(const UM_SetName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string passwd = 2;
  inline bool has_passwd() const;
  inline void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  inline const ::std::string& passwd() const;
  inline void set_passwd(const ::std::string& value);
  inline void set_passwd(const char* value);
  inline void set_passwd(const char* value, size_t size);
  inline ::std::string* mutable_passwd();
  inline ::std::string* release_passwd();
  inline void set_allocated_passwd(::std::string* passwd);

  // optional uint32 sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_SetName)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_passwd();
  inline void clear_has_passwd();
  inline void set_has_sex();
  inline void clear_has_sex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* passwd_;
  ::google::protobuf::uint32 sex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_SetName* default_instance_;
};
// -------------------------------------------------------------------

class UM_SetSex : public ::google::protobuf::Message {
 public:
  UM_SetSex();
  virtual ~UM_SetSex();

  UM_SetSex(const UM_SetSex& from);

  inline UM_SetSex& operator=(const UM_SetSex& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_SetSex& default_instance();

  void Swap(UM_SetSex* other);

  // implements Message ----------------------------------------------

  UM_SetSex* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_SetSex& from);
  void MergeFrom(const UM_SetSex& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sex = 1;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 1;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_SetSex)
 private:
  inline void set_has_sex();
  inline void clear_has_sex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 sex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_SetSex* default_instance_;
};
// -------------------------------------------------------------------

class UM_SetDesc : public ::google::protobuf::Message {
 public:
  UM_SetDesc();
  virtual ~UM_SetDesc();

  UM_SetDesc(const UM_SetDesc& from);

  inline UM_SetDesc& operator=(const UM_SetDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_SetDesc& default_instance();

  void Swap(UM_SetDesc* other);

  // implements Message ----------------------------------------------

  UM_SetDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_SetDesc& from);
  void MergeFrom(const UM_SetDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string desc = 1;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 1;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // @@protoc_insertion_point(class_scope:UM_SetDesc)
 private:
  inline void set_has_desc();
  inline void clear_has_desc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* desc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_SetDesc* default_instance_;
};
// -------------------------------------------------------------------

class UM_SetGeo : public ::google::protobuf::Message {
 public:
  UM_SetGeo();
  virtual ~UM_SetGeo();

  UM_SetGeo(const UM_SetGeo& from);

  inline UM_SetGeo& operator=(const UM_SetGeo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_SetGeo& default_instance();

  void Swap(UM_SetGeo* other);

  // implements Message ----------------------------------------------

  UM_SetGeo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_SetGeo& from);
  void MergeFrom(const UM_SetGeo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 province = 1;
  inline bool has_province() const;
  inline void clear_province();
  static const int kProvinceFieldNumber = 1;
  inline ::google::protobuf::uint32 province() const;
  inline void set_province(::google::protobuf::uint32 value);

  // optional uint32 city = 2;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 2;
  inline ::google::protobuf::uint32 city() const;
  inline void set_city(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UM_SetGeo)
 private:
  inline void set_has_province();
  inline void clear_has_province();
  inline void set_has_city();
  inline void clear_has_city();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 province_;
  ::google::protobuf::uint32 city_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_SetGeo* default_instance_;
};
// -------------------------------------------------------------------

class UM_SetIcon : public ::google::protobuf::Message {
 public:
  UM_SetIcon();
  virtual ~UM_SetIcon();

  UM_SetIcon(const UM_SetIcon& from);

  inline UM_SetIcon& operator=(const UM_SetIcon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_SetIcon& default_instance();

  void Swap(UM_SetIcon* other);

  // implements Message ----------------------------------------------

  UM_SetIcon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_SetIcon& from);
  void MergeFrom(const UM_SetIcon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 icon = 1;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 1;
  inline ::google::protobuf::uint32 icon() const;
  inline void set_icon(::google::protobuf::uint32 value);

  // optional string data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:UM_SetIcon)
 private:
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* data_;
  ::google::protobuf::uint32 icon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_SetIcon* default_instance_;
};
// -------------------------------------------------------------------

class UM_GetTicket : public ::google::protobuf::Message {
 public:
  UM_GetTicket();
  virtual ~UM_GetTicket();

  UM_GetTicket(const UM_GetTicket& from);

  inline UM_GetTicket& operator=(const UM_GetTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_GetTicket& default_instance();

  void Swap(UM_GetTicket* other);

  // implements Message ----------------------------------------------

  UM_GetTicket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_GetTicket& from);
  void MergeFrom(const UM_GetTicket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UM_GetTicket)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_GetTicket* default_instance_;
};
// -------------------------------------------------------------------

class UM_ReqIcons : public ::google::protobuf::Message {
 public:
  UM_ReqIcons();
  virtual ~UM_ReqIcons();

  UM_ReqIcons(const UM_ReqIcons& from);

  inline UM_ReqIcons& operator=(const UM_ReqIcons& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_ReqIcons& default_instance();

  void Swap(UM_ReqIcons* other);

  // implements Message ----------------------------------------------

  UM_ReqIcons* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_ReqIcons& from);
  void MergeFrom(const UM_ReqIcons& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline ::google::protobuf::uint32 list(int index) const;
  inline void set_list(int index, ::google::protobuf::uint32 value);
  inline void add_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:UM_ReqIcons)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_ReqIcons* default_instance_;
};
// -------------------------------------------------------------------

class UM_Icons : public ::google::protobuf::Message {
 public:
  UM_Icons();
  virtual ~UM_Icons();

  UM_Icons(const UM_Icons& from);

  inline UM_Icons& operator=(const UM_Icons& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Icons& default_instance();

  void Swap(UM_Icons* other);

  // implements Message ----------------------------------------------

  UM_Icons* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Icons& from);
  void MergeFrom(const UM_Icons& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .icon_data list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::icon_data& list(int index) const;
  inline ::icon_data* mutable_list(int index);
  inline ::icon_data* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::icon_data >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::icon_data >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:UM_Icons)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::icon_data > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Icons* default_instance_;
};
// -------------------------------------------------------------------

class UM_Sign : public ::google::protobuf::Message {
 public:
  UM_Sign();
  virtual ~UM_Sign();

  UM_Sign(const UM_Sign& from);

  inline UM_Sign& operator=(const UM_Sign& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Sign& default_instance();

  void Swap(UM_Sign* other);

  // implements Message ----------------------------------------------

  UM_Sign* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Sign& from);
  void MergeFrom(const UM_Sign& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UM_Sign)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Sign* default_instance_;
};
// -------------------------------------------------------------------

class UM_Award : public ::google::protobuf::Message {
 public:
  UM_Award();
  virtual ~UM_Award();

  UM_Award(const UM_Award& from);

  inline UM_Award& operator=(const UM_Award& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_Award& default_instance();

  void Swap(UM_Award* other);

  // implements Message ----------------------------------------------

  UM_Award* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_Award& from);
  void MergeFrom(const UM_Award& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UM_Award)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_Award* default_instance_;
};
// -------------------------------------------------------------------

class UM_AwardList : public ::google::protobuf::Message {
 public:
  UM_AwardList();
  virtual ~UM_AwardList();

  UM_AwardList(const UM_AwardList& from);

  inline UM_AwardList& operator=(const UM_AwardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UM_AwardList& default_instance();

  void Swap(UM_AwardList* other);

  // implements Message ----------------------------------------------

  UM_AwardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UM_AwardList& from);
  void MergeFrom(const UM_AwardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .award_info list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::award_info& list(int index) const;
  inline ::award_info* mutable_list(int index);
  inline ::award_info* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::award_info >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::award_info >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:UM_AwardList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::award_info > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fclient_2eproto();
  friend void protobuf_AssignDesc_msg_5fclient_2eproto();
  friend void protobuf_ShutdownFile_msg_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UM_AwardList* default_instance_;
};
// ===================================================================


// ===================================================================

// UM_Login

// optional string acc = 1;
inline bool UM_Login::has_acc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_Login::set_has_acc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_Login::clear_has_acc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_Login::clear_acc() {
  if (acc_ != &::google::protobuf::internal::kEmptyString) {
    acc_->clear();
  }
  clear_has_acc();
}
inline const ::std::string& UM_Login::acc() const {
  return *acc_;
}
inline void UM_Login::set_acc(const ::std::string& value) {
  set_has_acc();
  if (acc_ == &::google::protobuf::internal::kEmptyString) {
    acc_ = new ::std::string;
  }
  acc_->assign(value);
}
inline void UM_Login::set_acc(const char* value) {
  set_has_acc();
  if (acc_ == &::google::protobuf::internal::kEmptyString) {
    acc_ = new ::std::string;
  }
  acc_->assign(value);
}
inline void UM_Login::set_acc(const char* value, size_t size) {
  set_has_acc();
  if (acc_ == &::google::protobuf::internal::kEmptyString) {
    acc_ = new ::std::string;
  }
  acc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UM_Login::mutable_acc() {
  set_has_acc();
  if (acc_ == &::google::protobuf::internal::kEmptyString) {
    acc_ = new ::std::string;
  }
  return acc_;
}
inline ::std::string* UM_Login::release_acc() {
  clear_has_acc();
  if (acc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = acc_;
    acc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UM_Login::set_allocated_acc(::std::string* acc) {
  if (acc_ != &::google::protobuf::internal::kEmptyString) {
    delete acc_;
  }
  if (acc) {
    set_has_acc();
    acc_ = acc;
  } else {
    clear_has_acc();
    acc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string passwd = 2;
inline bool UM_Login::has_passwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_Login::set_has_passwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_Login::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_Login::clear_passwd() {
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    passwd_->clear();
  }
  clear_has_passwd();
}
inline const ::std::string& UM_Login::passwd() const {
  return *passwd_;
}
inline void UM_Login::set_passwd(const ::std::string& value) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void UM_Login::set_passwd(const char* value) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void UM_Login::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UM_Login::mutable_passwd() {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  return passwd_;
}
inline ::std::string* UM_Login::release_passwd() {
  clear_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = passwd_;
    passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UM_Login::set_allocated_passwd(::std::string* passwd) {
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    delete passwd_;
  }
  if (passwd) {
    set_has_passwd();
    passwd_ = passwd;
  } else {
    clear_has_passwd();
    passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UM_Logout

// optional int32 err = 1;
inline bool UM_Logout::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_Logout::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_Logout::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_Logout::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 UM_Logout::err() const {
  return err_;
}
inline void UM_Logout::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// -------------------------------------------------------------------

// UM_EnterGame

// optional .role_info info = 1;
inline bool UM_EnterGame::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_EnterGame::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_EnterGame::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_EnterGame::clear_info() {
  if (info_ != NULL) info_->::role_info::Clear();
  clear_has_info();
}
inline const ::role_info& UM_EnterGame::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::role_info* UM_EnterGame::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::role_info;
  return info_;
}
inline ::role_info* UM_EnterGame::release_info() {
  clear_has_info();
  ::role_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UM_EnterGame::set_allocated_info(::role_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// optional uint32 servertime = 2;
inline bool UM_EnterGame::has_servertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_EnterGame::set_has_servertime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_EnterGame::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_EnterGame::clear_servertime() {
  servertime_ = 0u;
  clear_has_servertime();
}
inline ::google::protobuf::uint32 UM_EnterGame::servertime() const {
  return servertime_;
}
inline void UM_EnterGame::set_servertime(::google::protobuf::uint32 value) {
  set_has_servertime();
  servertime_ = value;
}

// optional bool fighting = 3;
inline bool UM_EnterGame::has_fighting() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UM_EnterGame::set_has_fighting() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UM_EnterGame::clear_has_fighting() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UM_EnterGame::clear_fighting() {
  fighting_ = false;
  clear_has_fighting();
}
inline bool UM_EnterGame::fighting() const {
  return fighting_;
}
inline void UM_EnterGame::set_fighting(bool value) {
  set_has_fighting();
  fighting_ = value;
}

// -------------------------------------------------------------------

// UM_SyncRole

// optional .role_info info = 1;
inline bool UM_SyncRole::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_SyncRole::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_SyncRole::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_SyncRole::clear_info() {
  if (info_ != NULL) info_->::role_info::Clear();
  clear_has_info();
}
inline const ::role_info& UM_SyncRole::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::role_info* UM_SyncRole::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::role_info;
  return info_;
}
inline ::role_info* UM_SyncRole::release_info() {
  clear_has_info();
  ::role_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UM_SyncRole::set_allocated_info(::role_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// UM_BuyItem

// optional uint32 id = 1;
inline bool UM_BuyItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_BuyItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_BuyItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_BuyItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 UM_BuyItem::id() const {
  return id_;
}
inline void UM_BuyItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// UM_UseItem

// optional uint32 id = 1;
inline bool UM_UseItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_UseItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_UseItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_UseItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 UM_UseItem::id() const {
  return id_;
}
inline void UM_UseItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// UM_ItemUpdate

// repeated .item_info list = 1;
inline int UM_ItemUpdate::list_size() const {
  return list_.size();
}
inline void UM_ItemUpdate::clear_list() {
  list_.Clear();
}
inline const ::item_info& UM_ItemUpdate::list(int index) const {
  return list_.Get(index);
}
inline ::item_info* UM_ItemUpdate::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::item_info* UM_ItemUpdate::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::item_info >&
UM_ItemUpdate::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::item_info >*
UM_ItemUpdate::mutable_list() {
  return &list_;
}

// optional int32 type = 2;
inline bool UM_ItemUpdate::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_ItemUpdate::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_ItemUpdate::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_ItemUpdate::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UM_ItemUpdate::type() const {
  return type_;
}
inline void UM_ItemUpdate::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// UM_UnequipItem

// optional int32 itemtype = 1;
inline bool UM_UnequipItem::has_itemtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_UnequipItem::set_has_itemtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_UnequipItem::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_UnequipItem::clear_itemtype() {
  itemtype_ = 0;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 UM_UnequipItem::itemtype() const {
  return itemtype_;
}
inline void UM_UnequipItem::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
}

// -------------------------------------------------------------------

// UM_EquipUpdate

// optional int32 itemtype = 1;
inline bool UM_EquipUpdate::has_itemtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_EquipUpdate::set_has_itemtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_EquipUpdate::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_EquipUpdate::clear_itemtype() {
  itemtype_ = 0;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 UM_EquipUpdate::itemtype() const {
  return itemtype_;
}
inline void UM_EquipUpdate::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
}

// optional uint32 id = 2;
inline bool UM_EquipUpdate::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_EquipUpdate::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_EquipUpdate::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_EquipUpdate::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 UM_EquipUpdate::id() const {
  return id_;
}
inline void UM_EquipUpdate::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// UM_ReqShop

// -------------------------------------------------------------------

// UM_Shop

// repeated .shop_item list = 1;
inline int UM_Shop::list_size() const {
  return list_.size();
}
inline void UM_Shop::clear_list() {
  list_.Clear();
}
inline const ::shop_item& UM_Shop::list(int index) const {
  return list_.Get(index);
}
inline ::shop_item* UM_Shop::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::shop_item* UM_Shop::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shop_item >&
UM_Shop::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::shop_item >*
UM_Shop::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// UM_HeroLevelup

// -------------------------------------------------------------------

// UM_Hero

// optional uint32 heroid = 1;
inline bool UM_Hero::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_Hero::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_Hero::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_Hero::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 UM_Hero::heroid() const {
  return heroid_;
}
inline void UM_Hero::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// optional uint32 herolevel = 2;
inline bool UM_Hero::has_herolevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_Hero::set_has_herolevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_Hero::clear_has_herolevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_Hero::clear_herolevel() {
  herolevel_ = 0u;
  clear_has_herolevel();
}
inline ::google::protobuf::uint32 UM_Hero::herolevel() const {
  return herolevel_;
}
inline void UM_Hero::set_herolevel(::google::protobuf::uint32 value) {
  set_has_herolevel();
  herolevel_ = value;
}

// -------------------------------------------------------------------

// UM_ReqServerList

// -------------------------------------------------------------------

// UM_ServerList

// repeated .server_info list = 1;
inline int UM_ServerList::list_size() const {
  return list_.size();
}
inline void UM_ServerList::clear_list() {
  list_.Clear();
}
inline const ::server_info& UM_ServerList::list(int index) const {
  return list_.Get(index);
}
inline ::server_info* UM_ServerList::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::server_info* UM_ServerList::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::server_info >&
UM_ServerList::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::server_info >*
UM_ServerList::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// UM_ReqLoginFight

// optional uint32 serverid = 1;
inline bool UM_ReqLoginFight::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_ReqLoginFight::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_ReqLoginFight::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_ReqLoginFight::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 UM_ReqLoginFight::serverid() const {
  return serverid_;
}
inline void UM_ReqLoginFight::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
}

// optional int32 mode = 2;
inline bool UM_ReqLoginFight::has_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_ReqLoginFight::set_has_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_ReqLoginFight::clear_has_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_ReqLoginFight::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
inline ::google::protobuf::int32 UM_ReqLoginFight::mode() const {
  return mode_;
}
inline void UM_ReqLoginFight::set_mode(::google::protobuf::int32 value) {
  set_has_mode();
  mode_ = value;
}

// optional uint32 ticket_count = 3;
inline bool UM_ReqLoginFight::has_ticket_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UM_ReqLoginFight::set_has_ticket_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UM_ReqLoginFight::clear_has_ticket_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UM_ReqLoginFight::clear_ticket_count() {
  ticket_count_ = 0u;
  clear_has_ticket_count();
}
inline ::google::protobuf::uint32 UM_ReqLoginFight::ticket_count() const {
  return ticket_count_;
}
inline void UM_ReqLoginFight::set_ticket_count(::google::protobuf::uint32 value) {
  set_has_ticket_count();
  ticket_count_ = value;
}

// -------------------------------------------------------------------

// UM_LoginFightKey

// optional uint32 serverid = 1;
inline bool UM_LoginFightKey::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_LoginFightKey::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_LoginFightKey::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_LoginFightKey::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 UM_LoginFightKey::serverid() const {
  return serverid_;
}
inline void UM_LoginFightKey::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
}

// optional uint32 key = 2;
inline bool UM_LoginFightKey::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_LoginFightKey::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_LoginFightKey::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_LoginFightKey::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 UM_LoginFightKey::key() const {
  return key_;
}
inline void UM_LoginFightKey::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// -------------------------------------------------------------------

// UM_ExitFight

// -------------------------------------------------------------------

// UM_Gm

// optional string command = 1;
inline bool UM_Gm::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_Gm::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_Gm::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_Gm::clear_command() {
  if (command_ != &::google::protobuf::internal::kEmptyString) {
    command_->clear();
  }
  clear_has_command();
}
inline const ::std::string& UM_Gm::command() const {
  return *command_;
}
inline void UM_Gm::set_command(const ::std::string& value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  command_->assign(value);
}
inline void UM_Gm::set_command(const char* value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  command_->assign(value);
}
inline void UM_Gm::set_command(const char* value, size_t size) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  command_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UM_Gm::mutable_command() {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  return command_;
}
inline ::std::string* UM_Gm::release_command() {
  clear_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = command_;
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UM_Gm::set_allocated_command(::std::string* command) {
  if (command_ != &::google::protobuf::internal::kEmptyString) {
    delete command_;
  }
  if (command) {
    set_has_command();
    command_ = command;
  } else {
    clear_has_command();
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UM_Response

// optional uint32 msgid = 1;
inline bool UM_Response::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_Response::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_Response::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_Response::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 UM_Response::msgid() const {
  return msgid_;
}
inline void UM_Response::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// optional int32 err = 2;
inline bool UM_Response::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_Response::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_Response::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_Response::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 UM_Response::err() const {
  return err_;
}
inline void UM_Response::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// -------------------------------------------------------------------

// UM_SetFocus

// optional uint32 type = 1;
inline bool UM_SetFocus::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_SetFocus::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_SetFocus::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_SetFocus::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 UM_SetFocus::type() const {
  return type_;
}
inline void UM_SetFocus::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 set = 2;
inline bool UM_SetFocus::has_set() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_SetFocus::set_has_set() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_SetFocus::clear_has_set() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_SetFocus::clear_set() {
  set_ = 0u;
  clear_has_set();
}
inline ::google::protobuf::uint32 UM_SetFocus::set() const {
  return set_;
}
inline void UM_SetFocus::set_set(::google::protobuf::uint32 value) {
  set_has_set();
  set_ = value;
}

// optional uint32 roleid = 3;
inline bool UM_SetFocus::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UM_SetFocus::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UM_SetFocus::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UM_SetFocus::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_SetFocus::roleid() const {
  return roleid_;
}
inline void UM_SetFocus::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_ReqRole

// optional uint32 roleid = 1;
inline bool UM_ReqRole::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_ReqRole::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_ReqRole::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_ReqRole::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_ReqRole::roleid() const {
  return roleid_;
}
inline void UM_ReqRole::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_RoleInfo

// optional .role_info info = 1;
inline bool UM_RoleInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_RoleInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_RoleInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_RoleInfo::clear_info() {
  if (info_ != NULL) info_->::role_info::Clear();
  clear_has_info();
}
inline const ::role_info& UM_RoleInfo::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::role_info* UM_RoleInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::role_info;
  return info_;
}
inline ::role_info* UM_RoleInfo::release_info() {
  clear_has_info();
  ::role_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UM_RoleInfo::set_allocated_info(::role_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// UM_ReqFans

// optional int32 type = 1;
inline bool UM_ReqFans::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_ReqFans::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_ReqFans::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_ReqFans::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UM_ReqFans::type() const {
  return type_;
}
inline void UM_ReqFans::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 range1 = 2;
inline bool UM_ReqFans::has_range1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_ReqFans::set_has_range1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_ReqFans::clear_has_range1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_ReqFans::clear_range1() {
  range1_ = 0u;
  clear_has_range1();
}
inline ::google::protobuf::uint32 UM_ReqFans::range1() const {
  return range1_;
}
inline void UM_ReqFans::set_range1(::google::protobuf::uint32 value) {
  set_has_range1();
  range1_ = value;
}

// optional uint32 range2 = 3;
inline bool UM_ReqFans::has_range2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UM_ReqFans::set_has_range2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UM_ReqFans::clear_has_range2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UM_ReqFans::clear_range2() {
  range2_ = 0u;
  clear_has_range2();
}
inline ::google::protobuf::uint32 UM_ReqFans::range2() const {
  return range2_;
}
inline void UM_ReqFans::set_range2(::google::protobuf::uint32 value) {
  set_has_range2();
  range2_ = value;
}

// optional uint32 roleid = 4;
inline bool UM_ReqFans::has_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UM_ReqFans::set_has_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UM_ReqFans::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UM_ReqFans::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_ReqFans::roleid() const {
  return roleid_;
}
inline void UM_ReqFans::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_Fans

// repeated .fans_info list = 1;
inline int UM_Fans::list_size() const {
  return list_.size();
}
inline void UM_Fans::clear_list() {
  list_.Clear();
}
inline const ::fans_info& UM_Fans::list(int index) const {
  return list_.Get(index);
}
inline ::fans_info* UM_Fans::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::fans_info* UM_Fans::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fans_info >&
UM_Fans::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::fans_info >*
UM_Fans::mutable_list() {
  return &list_;
}

// optional uint32 range1 = 2;
inline bool UM_Fans::has_range1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_Fans::set_has_range1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_Fans::clear_has_range1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_Fans::clear_range1() {
  range1_ = 0u;
  clear_has_range1();
}
inline ::google::protobuf::uint32 UM_Fans::range1() const {
  return range1_;
}
inline void UM_Fans::set_range1(::google::protobuf::uint32 value) {
  set_has_range1();
  range1_ = value;
}

// optional uint32 range2 = 3;
inline bool UM_Fans::has_range2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UM_Fans::set_has_range2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UM_Fans::clear_has_range2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UM_Fans::clear_range2() {
  range2_ = 0u;
  clear_has_range2();
}
inline ::google::protobuf::uint32 UM_Fans::range2() const {
  return range2_;
}
inline void UM_Fans::set_range2(::google::protobuf::uint32 value) {
  set_has_range2();
  range2_ = value;
}

// optional uint32 roleid = 4;
inline bool UM_Fans::has_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UM_Fans::set_has_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UM_Fans::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UM_Fans::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_Fans::roleid() const {
  return roleid_;
}
inline void UM_Fans::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_ReqRanks

// optional int32 type = 1;
inline bool UM_ReqRanks::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_ReqRanks::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_ReqRanks::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_ReqRanks::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UM_ReqRanks::type() const {
  return type_;
}
inline void UM_ReqRanks::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 subtype = 2;
inline bool UM_ReqRanks::has_subtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_ReqRanks::set_has_subtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_ReqRanks::clear_has_subtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_ReqRanks::clear_subtype() {
  subtype_ = 0;
  clear_has_subtype();
}
inline ::google::protobuf::int32 UM_ReqRanks::subtype() const {
  return subtype_;
}
inline void UM_ReqRanks::set_subtype(::google::protobuf::int32 value) {
  set_has_subtype();
  subtype_ = value;
}

// -------------------------------------------------------------------

// UM_Ranks

// repeated .rank_info list = 1;
inline int UM_Ranks::list_size() const {
  return list_.size();
}
inline void UM_Ranks::clear_list() {
  list_.Clear();
}
inline const ::rank_info& UM_Ranks::list(int index) const {
  return list_.Get(index);
}
inline ::rank_info* UM_Ranks::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::rank_info* UM_Ranks::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rank_info >&
UM_Ranks::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::rank_info >*
UM_Ranks::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// UM_FightLikes

// repeated bool attentions = 1;
inline int UM_FightLikes::attentions_size() const {
  return attentions_.size();
}
inline void UM_FightLikes::clear_attentions() {
  attentions_.Clear();
}
inline bool UM_FightLikes::attentions(int index) const {
  return attentions_.Get(index);
}
inline void UM_FightLikes::set_attentions(int index, bool value) {
  attentions_.Set(index, value);
}
inline void UM_FightLikes::add_attentions(bool value) {
  attentions_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
UM_FightLikes::attentions() const {
  return attentions_;
}
inline ::google::protobuf::RepeatedField< bool >*
UM_FightLikes::mutable_attentions() {
  return &attentions_;
}

// repeated bool likes = 2;
inline int UM_FightLikes::likes_size() const {
  return likes_.size();
}
inline void UM_FightLikes::clear_likes() {
  likes_.Clear();
}
inline bool UM_FightLikes::likes(int index) const {
  return likes_.Get(index);
}
inline void UM_FightLikes::set_likes(int index, bool value) {
  likes_.Set(index, value);
}
inline void UM_FightLikes::add_likes(bool value) {
  likes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
UM_FightLikes::likes() const {
  return likes_;
}
inline ::google::protobuf::RepeatedField< bool >*
UM_FightLikes::mutable_likes() {
  return &likes_;
}

// repeated uint32 roles = 3;
inline int UM_FightLikes::roles_size() const {
  return roles_.size();
}
inline void UM_FightLikes::clear_roles() {
  roles_.Clear();
}
inline ::google::protobuf::uint32 UM_FightLikes::roles(int index) const {
  return roles_.Get(index);
}
inline void UM_FightLikes::set_roles(int index, ::google::protobuf::uint32 value) {
  roles_.Set(index, value);
}
inline void UM_FightLikes::add_roles(::google::protobuf::uint32 value) {
  roles_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UM_FightLikes::roles() const {
  return roles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UM_FightLikes::mutable_roles() {
  return &roles_;
}

// -------------------------------------------------------------------

// UM_GetTopMsg

// optional uint32 roleid = 1;
inline bool UM_GetTopMsg::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_GetTopMsg::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_GetTopMsg::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_GetTopMsg::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_GetTopMsg::roleid() const {
  return roleid_;
}
inline void UM_GetTopMsg::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_GetMsg

// optional uint32 roleid = 1;
inline bool UM_GetMsg::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_GetMsg::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_GetMsg::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_GetMsg::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_GetMsg::roleid() const {
  return roleid_;
}
inline void UM_GetMsg::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional uint32 range1 = 2;
inline bool UM_GetMsg::has_range1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_GetMsg::set_has_range1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_GetMsg::clear_has_range1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_GetMsg::clear_range1() {
  range1_ = 0u;
  clear_has_range1();
}
inline ::google::protobuf::uint32 UM_GetMsg::range1() const {
  return range1_;
}
inline void UM_GetMsg::set_range1(::google::protobuf::uint32 value) {
  set_has_range1();
  range1_ = value;
}

// optional uint32 range2 = 3;
inline bool UM_GetMsg::has_range2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UM_GetMsg::set_has_range2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UM_GetMsg::clear_has_range2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UM_GetMsg::clear_range2() {
  range2_ = 0u;
  clear_has_range2();
}
inline ::google::protobuf::uint32 UM_GetMsg::range2() const {
  return range2_;
}
inline void UM_GetMsg::set_range2(::google::protobuf::uint32 value) {
  set_has_range2();
  range2_ = value;
}

// -------------------------------------------------------------------

// UM_SendMsg

// optional uint32 roleid = 1;
inline bool UM_SendMsg::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_SendMsg::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_SendMsg::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_SendMsg::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_SendMsg::roleid() const {
  return roleid_;
}
inline void UM_SendMsg::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string content = 2;
inline bool UM_SendMsg::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_SendMsg::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_SendMsg::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_SendMsg::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& UM_SendMsg::content() const {
  return *content_;
}
inline void UM_SendMsg::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void UM_SendMsg::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void UM_SendMsg::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UM_SendMsg::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* UM_SendMsg::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UM_SendMsg::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UM_LikeMsg

// optional uint32 roleid = 1;
inline bool UM_LikeMsg::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_LikeMsg::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_LikeMsg::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_LikeMsg::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_LikeMsg::roleid() const {
  return roleid_;
}
inline void UM_LikeMsg::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional uint32 msgid = 2;
inline bool UM_LikeMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_LikeMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_LikeMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_LikeMsg::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 UM_LikeMsg::msgid() const {
  return msgid_;
}
inline void UM_LikeMsg::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// optional int32 set = 3;
inline bool UM_LikeMsg::has_set() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UM_LikeMsg::set_has_set() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UM_LikeMsg::clear_has_set() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UM_LikeMsg::clear_set() {
  set_ = 0;
  clear_has_set();
}
inline ::google::protobuf::int32 UM_LikeMsg::set() const {
  return set_;
}
inline void UM_LikeMsg::set_set(::google::protobuf::int32 value) {
  set_has_set();
  set_ = value;
}

// -------------------------------------------------------------------

// UM_TopMsg

// optional uint32 roleid = 1;
inline bool UM_TopMsg::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_TopMsg::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_TopMsg::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_TopMsg::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_TopMsg::roleid() const {
  return roleid_;
}
inline void UM_TopMsg::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated .msg_info list = 2;
inline int UM_TopMsg::list_size() const {
  return list_.size();
}
inline void UM_TopMsg::clear_list() {
  list_.Clear();
}
inline const ::msg_info& UM_TopMsg::list(int index) const {
  return list_.Get(index);
}
inline ::msg_info* UM_TopMsg::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::msg_info* UM_TopMsg::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_info >&
UM_TopMsg::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg_info >*
UM_TopMsg::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// UM_MsgList

// optional uint32 roleid = 1;
inline bool UM_MsgList::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_MsgList::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_MsgList::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_MsgList::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_MsgList::roleid() const {
  return roleid_;
}
inline void UM_MsgList::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional uint32 range1 = 2;
inline bool UM_MsgList::has_range1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_MsgList::set_has_range1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_MsgList::clear_has_range1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_MsgList::clear_range1() {
  range1_ = 0u;
  clear_has_range1();
}
inline ::google::protobuf::uint32 UM_MsgList::range1() const {
  return range1_;
}
inline void UM_MsgList::set_range1(::google::protobuf::uint32 value) {
  set_has_range1();
  range1_ = value;
}

// optional uint32 range2 = 3;
inline bool UM_MsgList::has_range2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UM_MsgList::set_has_range2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UM_MsgList::clear_has_range2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UM_MsgList::clear_range2() {
  range2_ = 0u;
  clear_has_range2();
}
inline ::google::protobuf::uint32 UM_MsgList::range2() const {
  return range2_;
}
inline void UM_MsgList::set_range2(::google::protobuf::uint32 value) {
  set_has_range2();
  range2_ = value;
}

// repeated .msg_info list = 4;
inline int UM_MsgList::list_size() const {
  return list_.size();
}
inline void UM_MsgList::clear_list() {
  list_.Clear();
}
inline const ::msg_info& UM_MsgList::list(int index) const {
  return list_.Get(index);
}
inline ::msg_info* UM_MsgList::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::msg_info* UM_MsgList::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_info >&
UM_MsgList::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg_info >*
UM_MsgList::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// UM_GetFriend

// optional int32 type = 1;
inline bool UM_GetFriend::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_GetFriend::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_GetFriend::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_GetFriend::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UM_GetFriend::type() const {
  return type_;
}
inline void UM_GetFriend::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// UM_Friends

// repeated .friend_info list = 1;
inline int UM_Friends::list_size() const {
  return list_.size();
}
inline void UM_Friends::clear_list() {
  list_.Clear();
}
inline const ::friend_info& UM_Friends::list(int index) const {
  return list_.Get(index);
}
inline ::friend_info* UM_Friends::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::friend_info* UM_Friends::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::friend_info >&
UM_Friends::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::friend_info >*
UM_Friends::mutable_list() {
  return &list_;
}

// optional int32 type = 3;
inline bool UM_Friends::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_Friends::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_Friends::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_Friends::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UM_Friends::type() const {
  return type_;
}
inline void UM_Friends::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// UM_ResponseInvite

// optional int32 ok = 1;
inline bool UM_ResponseInvite::has_ok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_ResponseInvite::set_has_ok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_ResponseInvite::clear_has_ok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_ResponseInvite::clear_ok() {
  ok_ = 0;
  clear_has_ok();
}
inline ::google::protobuf::int32 UM_ResponseInvite::ok() const {
  return ok_;
}
inline void UM_ResponseInvite::set_ok(::google::protobuf::int32 value) {
  set_has_ok();
  ok_ = value;
}

// optional uint32 roleid = 2;
inline bool UM_ResponseInvite::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_ResponseInvite::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_ResponseInvite::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_ResponseInvite::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_ResponseInvite::roleid() const {
  return roleid_;
}
inline void UM_ResponseInvite::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_AddFriend

// optional int32 type = 1;
inline bool UM_AddFriend::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_AddFriend::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_AddFriend::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_AddFriend::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UM_AddFriend::type() const {
  return type_;
}
inline void UM_AddFriend::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional .friend_info info = 2;
inline bool UM_AddFriend::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_AddFriend::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_AddFriend::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_AddFriend::clear_info() {
  if (info_ != NULL) info_->::friend_info::Clear();
  clear_has_info();
}
inline const ::friend_info& UM_AddFriend::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::friend_info* UM_AddFriend::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::friend_info;
  return info_;
}
inline ::friend_info* UM_AddFriend::release_info() {
  clear_has_info();
  ::friend_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UM_AddFriend::set_allocated_info(::friend_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// UM_InviteFriend

// optional uint32 roleid = 1;
inline bool UM_InviteFriend::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_InviteFriend::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_InviteFriend::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_InviteFriend::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_InviteFriend::roleid() const {
  return roleid_;
}
inline void UM_InviteFriend::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string name = 2;
inline bool UM_InviteFriend::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_InviteFriend::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_InviteFriend::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_InviteFriend::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& UM_InviteFriend::name() const {
  return *name_;
}
inline void UM_InviteFriend::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void UM_InviteFriend::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void UM_InviteFriend::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UM_InviteFriend::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* UM_InviteFriend::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UM_InviteFriend::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UM_AddInvite

// optional int32 type = 1;
inline bool UM_AddInvite::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_AddInvite::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_AddInvite::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_AddInvite::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UM_AddInvite::type() const {
  return type_;
}
inline void UM_AddInvite::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional .friend_info info = 2;
inline bool UM_AddInvite::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_AddInvite::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_AddInvite::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_AddInvite::clear_info() {
  if (info_ != NULL) info_->::friend_info::Clear();
  clear_has_info();
}
inline const ::friend_info& UM_AddInvite::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::friend_info* UM_AddInvite::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::friend_info;
  return info_;
}
inline ::friend_info* UM_AddInvite::release_info() {
  clear_has_info();
  ::friend_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UM_AddInvite::set_allocated_info(::friend_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// UM_DelInvite

// optional int32 type = 1;
inline bool UM_DelInvite::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_DelInvite::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_DelInvite::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_DelInvite::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UM_DelInvite::type() const {
  return type_;
}
inline void UM_DelInvite::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional .friend_info info = 2;
inline bool UM_DelInvite::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_DelInvite::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_DelInvite::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_DelInvite::clear_info() {
  if (info_ != NULL) info_->::friend_info::Clear();
  clear_has_info();
}
inline const ::friend_info& UM_DelInvite::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::friend_info* UM_DelInvite::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::friend_info;
  return info_;
}
inline ::friend_info* UM_DelInvite::release_info() {
  clear_has_info();
  ::friend_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UM_DelInvite::set_allocated_info(::friend_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// UM_ToBlack

// optional uint32 roleid = 1;
inline bool UM_ToBlack::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_ToBlack::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_ToBlack::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_ToBlack::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_ToBlack::roleid() const {
  return roleid_;
}
inline void UM_ToBlack::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_AddBlack

// optional .friend_info info = 1;
inline bool UM_AddBlack::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_AddBlack::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_AddBlack::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_AddBlack::clear_info() {
  if (info_ != NULL) info_->::friend_info::Clear();
  clear_has_info();
}
inline const ::friend_info& UM_AddBlack::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::friend_info* UM_AddBlack::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::friend_info;
  return info_;
}
inline ::friend_info* UM_AddBlack::release_info() {
  clear_has_info();
  ::friend_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UM_AddBlack::set_allocated_info(::friend_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// UM_ReqSeasonRank

// optional uint32 roleid = 1;
inline bool UM_ReqSeasonRank::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_ReqSeasonRank::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_ReqSeasonRank::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_ReqSeasonRank::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_ReqSeasonRank::roleid() const {
  return roleid_;
}
inline void UM_ReqSeasonRank::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_SeasonRank

// repeated .season_rank list = 1;
inline int UM_SeasonRank::list_size() const {
  return list_.size();
}
inline void UM_SeasonRank::clear_list() {
  list_.Clear();
}
inline const ::season_rank& UM_SeasonRank::list(int index) const {
  return list_.Get(index);
}
inline ::season_rank* UM_SeasonRank::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::season_rank* UM_SeasonRank::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::season_rank >&
UM_SeasonRank::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::season_rank >*
UM_SeasonRank::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// UM_ReqGameRecord

// optional uint32 roleid = 1;
inline bool UM_ReqGameRecord::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_ReqGameRecord::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_ReqGameRecord::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_ReqGameRecord::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_ReqGameRecord::roleid() const {
  return roleid_;
}
inline void UM_ReqGameRecord::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_GameRecord

// repeated .game_record list = 1;
inline int UM_GameRecord::list_size() const {
  return list_.size();
}
inline void UM_GameRecord::clear_list() {
  list_.Clear();
}
inline const ::game_record& UM_GameRecord::list(int index) const {
  return list_.Get(index);
}
inline ::game_record* UM_GameRecord::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::game_record* UM_GameRecord::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_record >&
UM_GameRecord::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_record >*
UM_GameRecord::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// UM_SetPhoto

// optional .photo_data data = 1;
inline bool UM_SetPhoto::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_SetPhoto::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_SetPhoto::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_SetPhoto::clear_data() {
  if (data_ != NULL) data_->::photo_data::Clear();
  clear_has_data();
}
inline const ::photo_data& UM_SetPhoto::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::photo_data* UM_SetPhoto::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::photo_data;
  return data_;
}
inline ::photo_data* UM_SetPhoto::release_data() {
  clear_has_data();
  ::photo_data* temp = data_;
  data_ = NULL;
  return temp;
}
inline void UM_SetPhoto::set_allocated_data(::photo_data* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// UM_ReqPhotos

// optional uint32 roleid = 1;
inline bool UM_ReqPhotos::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_ReqPhotos::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_ReqPhotos::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_ReqPhotos::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_ReqPhotos::roleid() const {
  return roleid_;
}
inline void UM_ReqPhotos::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_Photos

// repeated .photo_data list = 1;
inline int UM_Photos::list_size() const {
  return list_.size();
}
inline void UM_Photos::clear_list() {
  list_.Clear();
}
inline const ::photo_data& UM_Photos::list(int index) const {
  return list_.Get(index);
}
inline ::photo_data* UM_Photos::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::photo_data* UM_Photos::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::photo_data >&
UM_Photos::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::photo_data >*
UM_Photos::mutable_list() {
  return &list_;
}

// optional uint32 roleid = 2;
inline bool UM_Photos::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_Photos::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_Photos::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_Photos::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 UM_Photos::roleid() const {
  return roleid_;
}
inline void UM_Photos::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// UM_SetName

// optional string name = 1;
inline bool UM_SetName::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_SetName::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_SetName::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_SetName::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& UM_SetName::name() const {
  return *name_;
}
inline void UM_SetName::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void UM_SetName::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void UM_SetName::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UM_SetName::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* UM_SetName::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UM_SetName::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string passwd = 2;
inline bool UM_SetName::has_passwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_SetName::set_has_passwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_SetName::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_SetName::clear_passwd() {
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    passwd_->clear();
  }
  clear_has_passwd();
}
inline const ::std::string& UM_SetName::passwd() const {
  return *passwd_;
}
inline void UM_SetName::set_passwd(const ::std::string& value) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void UM_SetName::set_passwd(const char* value) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void UM_SetName::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UM_SetName::mutable_passwd() {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  return passwd_;
}
inline ::std::string* UM_SetName::release_passwd() {
  clear_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = passwd_;
    passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UM_SetName::set_allocated_passwd(::std::string* passwd) {
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    delete passwd_;
  }
  if (passwd) {
    set_has_passwd();
    passwd_ = passwd;
  } else {
    clear_has_passwd();
    passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 sex = 3;
inline bool UM_SetName::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UM_SetName::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UM_SetName::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UM_SetName::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 UM_SetName::sex() const {
  return sex_;
}
inline void UM_SetName::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
}

// -------------------------------------------------------------------

// UM_SetSex

// optional uint32 sex = 1;
inline bool UM_SetSex::has_sex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_SetSex::set_has_sex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_SetSex::clear_has_sex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_SetSex::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 UM_SetSex::sex() const {
  return sex_;
}
inline void UM_SetSex::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
}

// -------------------------------------------------------------------

// UM_SetDesc

// optional string desc = 1;
inline bool UM_SetDesc::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_SetDesc::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_SetDesc::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_SetDesc::clear_desc() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& UM_SetDesc::desc() const {
  return *desc_;
}
inline void UM_SetDesc::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void UM_SetDesc::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void UM_SetDesc::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UM_SetDesc::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  return desc_;
}
inline ::std::string* UM_SetDesc::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UM_SetDesc::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UM_SetGeo

// optional uint32 province = 1;
inline bool UM_SetGeo::has_province() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_SetGeo::set_has_province() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_SetGeo::clear_has_province() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_SetGeo::clear_province() {
  province_ = 0u;
  clear_has_province();
}
inline ::google::protobuf::uint32 UM_SetGeo::province() const {
  return province_;
}
inline void UM_SetGeo::set_province(::google::protobuf::uint32 value) {
  set_has_province();
  province_ = value;
}

// optional uint32 city = 2;
inline bool UM_SetGeo::has_city() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_SetGeo::set_has_city() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_SetGeo::clear_has_city() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_SetGeo::clear_city() {
  city_ = 0u;
  clear_has_city();
}
inline ::google::protobuf::uint32 UM_SetGeo::city() const {
  return city_;
}
inline void UM_SetGeo::set_city(::google::protobuf::uint32 value) {
  set_has_city();
  city_ = value;
}

// -------------------------------------------------------------------

// UM_SetIcon

// optional uint32 icon = 1;
inline bool UM_SetIcon::has_icon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UM_SetIcon::set_has_icon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UM_SetIcon::clear_has_icon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UM_SetIcon::clear_icon() {
  icon_ = 0u;
  clear_has_icon();
}
inline ::google::protobuf::uint32 UM_SetIcon::icon() const {
  return icon_;
}
inline void UM_SetIcon::set_icon(::google::protobuf::uint32 value) {
  set_has_icon();
  icon_ = value;
}

// optional string data = 2;
inline bool UM_SetIcon::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UM_SetIcon::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UM_SetIcon::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UM_SetIcon::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& UM_SetIcon::data() const {
  return *data_;
}
inline void UM_SetIcon::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void UM_SetIcon::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void UM_SetIcon::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UM_SetIcon::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* UM_SetIcon::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UM_SetIcon::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UM_GetTicket

// -------------------------------------------------------------------

// UM_ReqIcons

// repeated uint32 list = 1;
inline int UM_ReqIcons::list_size() const {
  return list_.size();
}
inline void UM_ReqIcons::clear_list() {
  list_.Clear();
}
inline ::google::protobuf::uint32 UM_ReqIcons::list(int index) const {
  return list_.Get(index);
}
inline void UM_ReqIcons::set_list(int index, ::google::protobuf::uint32 value) {
  list_.Set(index, value);
}
inline void UM_ReqIcons::add_list(::google::protobuf::uint32 value) {
  list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UM_ReqIcons::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UM_ReqIcons::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// UM_Icons

// repeated .icon_data list = 1;
inline int UM_Icons::list_size() const {
  return list_.size();
}
inline void UM_Icons::clear_list() {
  list_.Clear();
}
inline const ::icon_data& UM_Icons::list(int index) const {
  return list_.Get(index);
}
inline ::icon_data* UM_Icons::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::icon_data* UM_Icons::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::icon_data >&
UM_Icons::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::icon_data >*
UM_Icons::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// UM_Sign

// -------------------------------------------------------------------

// UM_Award

// -------------------------------------------------------------------

// UM_AwardList

// repeated .award_info list = 1;
inline int UM_AwardList::list_size() const {
  return list_.size();
}
inline void UM_AwardList::clear_list() {
  list_.Clear();
}
inline const ::award_info& UM_AwardList::list(int index) const {
  return list_.Get(index);
}
inline ::award_info* UM_AwardList::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::award_info* UM_AwardList::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::award_info >&
UM_AwardList::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::award_info >*
UM_AwardList::mutable_list() {
  return &list_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IDUM_CLI>() {
  return ::IDUM_CLI_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fclient_2eproto__INCLUDED
